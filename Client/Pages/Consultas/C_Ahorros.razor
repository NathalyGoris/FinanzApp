@page "/ConsultaAhorro"
@inject HttpClient httpClient


<h1 class="text-center">Consulta de Ahorros</h1>

<div>
    @if (L_Ahorros == null)
    {
        <p><em>Sin datos para mostrar...</em></p>
    }
    else
    {
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
            FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="4" PagerHorizontalAlign="HorizontalAlign.Left"
            AllowSorting="true" Data="@L_Ahorros" ColumnWidth="180px">
            <Columns>
                <RadzenGridColumn TItem="Ahorros" Property="AhorroId" Title="ID" />
                <RadzenGridColumn TItem="Ahorros" Property="NombreMeta" Title="Nombre Meta" />
                <RadzenGridColumn TItem="Ahorros" Property="Fecha" Title="Fecha" />
                <RadzenGridColumn TItem="Ahorros" Property="MontoMeta" Title="Monto meta" />
                <RadzenGridColumn TItem="Ahorros" Property="FrecuenciaAhorro" Title="Frecuencia de ahorro" >
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Ahorros" Title="Editar">
                    <Template Context="Ahorros">
                        <RadzenLink Path=@($"/registro-ahorro/{Ahorros.AhorroId}") Text="Ver">
                            <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="Ver" />
                        </RadzenLink>
                    </Template>
                </RadzenGridColumn>

            </Columns>
        </RadzenGrid>
    }

</div>

@code
{
    public string Asunto  { get; set; } = "";
    public int Conteo { get; set; } = 0;
    public Ahorros ahorros { get; set; } = new Ahorros();
    public List<Ahorros> L_Ahorros { get; set; } = new List<Ahorros>();

    protected override async Task OnInitializedAsync()
    {
        var ahorros = await httpClient.GetFromJsonAsync<List<Ahorros>>($"api/Ahorros");

        if(ahorros is not null)
        {
            L_Ahorros = ahorros;
        }
    }
}