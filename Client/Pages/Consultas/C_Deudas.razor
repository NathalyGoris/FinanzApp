@page "/Consultadeuda"
@inject HttpClient httpClient

<h1 class="text-center">Consulta de Deudas</h1>

<div>
    @if (L_Deudas == null)
    {
        <p><em>Sin datos para mostrar...</em></p>
    }
    else
    {
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
            FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="4" PagerHorizontalAlign="HorizontalAlign.Left"
            AllowSorting="true" Data="@L_Deudas" ColumnWidth="180px">
            <Columns>
                <RadzenGridColumn TItem="Deudas" Property="DeudaId" Title="ID" />
                <RadzenGridColumn TItem="Deudas" Property="Fecha" Title="Fecha" />
                <RadzenGridColumn TItem="Deudas" Property="NombreAcreedor" Title="Nombre Acreedor" />
                <RadzenGridColumn TItem="Deudas" Property="TipoDeuda" Title="Tipo Deuda" />
                <RadzenGridColumn TItem="Deudas" Property="MontoTotal" Title="Monto Total" >
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Deudas" Title="Editar">
                    <Template Context="Deudas">
                        <RadzenLink Path=@($"/registro-Deudas/{Deudas.DeudaId}") Text="Ver">
                            <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="Ver" />
                        </RadzenLink>
                    </Template>
                </RadzenGridColumn>

            </Columns>
        </RadzenGrid>
    }

</div>

@code
{
    public string Asunto  { get; set; } = "";
    public int Conteo { get; set; } = 0;
    public Deudas deudas { get; set; } = new Deudas();
    public List<Deudas> L_Deudas { get; set; } = new List<Deudas>();

    protected override async Task OnInitializedAsync()
    {
        var deudas = await httpClient.GetFromJsonAsync<List<Deudas>>($"api/Deudas");

        if(deudas is not null)
        {
            L_Deudas = deudas;
        }
    }
}